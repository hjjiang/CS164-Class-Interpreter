print("Tweet Stream loading....")

def tweetUrl = "http://api.twitter.com/1/statuses/public_timeline.json"
def createTweetObservable(ev) { Stream.fromHttpRequest(tweetUrl) }
def advTweet(tweet) { {user=tweet.user.name, text=tweet.text} }

def buttonUpdate = Stream.fromDOMEvent(bq("update").iter(),"click")
def timer = Stream.timer(60000)
# 1.) Observable[Int]                     -> Observable[Observable[List[Tweet]]]
# 2.) Observable[Observable[List[Tweet]]] -> Observable[List[Tweet]]
# 3.) Observable[List[Tweet]]             -> Observable[Tweet]
# 4.) Observable[Tweet]                   -> Observable[SimpleTweet]
def tweets = timer:observe(createTweetObservable):flatten():map(advTweet)

def zipStream = tweets:zip(buttonUpdate)

# Pull in some tweets right now by firing the timer stream.
timer:push(0)

#onclick activates a push on for userStream


# Append the tweets to the page.
# has double lambda
# 1) wait for a tweet
# 2) wait for user to push so that ZipStream emits something

def streamElement = bq("stream")
zipStream:subscribe(lambda(pair){
	def tweet = pair[0]
	def tweetTml = "<VBox><HBox>From: " + tweet.user + "</HBox>" + \
      "<HBox>" + tweet.text + "</HBox></VBox>"
    streamElement:append(tweetTml) 
    relayout()
})
