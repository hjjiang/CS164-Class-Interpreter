<VBox background="#DDE5FF">
  <HBox klass="header" fontSize="14px" fontWeight="bold" background="orange">
    BQuery test.
  </HBox>
  <HBox  background="moccasin">
    <HBox klass="l-button" fract="25" background="lightblue"
          onclick="bq('output'):append('<HBox>-- separator --</HBox>')">
      Add separator
    </HBox>
    <HBox fract="25" background="yellow" klass="m-button"
        onclick="bq('left'):clone():appendTo('output')">
      Add left box 
    </HBox>
    <HBox fract="25" background="lightgreen" klass="r-button"
        onclick="bq('right'):clone():appendTo('output')">
      Add right box 
    </HBox>
  <HBox fract="25" background="lightgrey">
    <Link ref="./demo.tml" klass="myclass">
         Refresh the page
    </Link>
  </HBox>
  </HBox>

  <HBox background="moccasin" klass="boxContainer"> 
    <HBox klass="left" fract="50" background="lightgreen"
          onclick="">
      <HBox klass="leftA" fract="50" background="lightblue"
          onclick="self.fract=self.fract+(101-self.fract)/2">
      C l i c k adjust size
      </HBox>
      <HBox klass="leftB" fract="50" background="lightblue"
          onclick="self.fract=self.fract-(101-self.fract)/2">
      C l i c k to adjust size
      </HBox>
    </HBox>

    <HBox klass="right" fract="50" background="lightyellow"
          onclick="">
      <HBox klass="rightInner" fract="70" background="lightgrey"
          onclick="bq('rightInner'):filter(lambda(node) {node.width < 100}):background('green')">
      C l i c k to test filter
      </HBox>
      <HBox klass="rightInner" fract="30" background="lightgrey"
          onclick="">
      Filter test
      </HBox>
    </HBox>
  </HBox>
    
  <HBox background="moccasin" >
    <HBox klass="ChildrenAndParent" fract="50" background="cyan"
          onclick="bq('ChildrenAndParent'):children():\
          filter(lambda(node){node.name == 'HBox'}):background('yellow')">
      C l i c k ME make my children boxes yellow!
      <HBox klass="child1" fract="50" background="white"
          onclick="bq('child1'):parent():background('red')">
        C l i c k me, parent onclick and bg red
      </HBox>
      <HBox klass="child2" fract="50" background="white"
          onclick="bq('child2'):parent():background('orange')">
        C l i c k e, parent onclick and bg orange
      </HBox>
    </HBox>
    <HBox klass="first" fract="50" background="cyan"
          onclick="bq('first'):children():\
          filter(lambda(node){node.name == 'HBox'}):first():background('green')">
      make my first child box green!
      <HBox klass="fchild1" fract="50" background="white"
          onclick="bq('fchild1'):parent():filter(lambda(node){node.name == 'HBox'}):background('red')">
        C l i c k me, parent onclick and bg red
      </HBox>
      <HBox klass="fchild2" fract="50" background="white"
          onclick="bq('fchild2'):parents():background('orange')">
        C l i c k me, PARENTS() onclick and bg orange
      </HBox>
    </HBox>
  </HBox>

  <HBox klass="ctest" onclick="kool('ctest')">
    test: once = red, second = cyan
  </HBox>

  <HBox klass="mtest" background="moccasin">
    <HBox background="white" klass="mtestee" onclick="bq('mtestee'):map(lambda(node){node.fract = '50';node}):background('red')">
      MAP
    </HBox>
    <HBox background="white" klass="mtestee" onclick="bq('mtestee'):each(lambda(node){node.leftPadding = 50}):clone():appendTo('output')">
      EACH
    </HBox>
  </HBox>

  <HBox fract="50" klass="end" background="moccasin">
    <HBox klass="Inner" fract="70" background="lightgrey"
          onclick="bq('Inner'):filter(lambda(node) {node.width < 100}):\
          clone():background('green'):appendTo('output'):end():clone():appendTo('output')">
      End()
      </HBox>
      <HBox klass="Inner" fract="30" background="lightgrey"
          onclick="">
      END() test
      </HBox>
  </HBox>

  <VBox background="white" klass="output">
    <HBox>The output box:</HBox>
  </VBox>
  <Script ref="./demoScript.164"></Script>
</VBox>


